{"version":3,"sources":["BooksAPI.js","components/Book.js","components/Search.js","components/Shelf.js","components/List.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","getAll","fetch","then","res","json","data","books","search","query","method","body","JSON","stringify","Book","e","book","shelf","id","BooksAPI","target","value","props","onUpdate","this","className","style","width","height","backgroundImage","imageLinks","thumbnail","onChange","updateShelf","defaultValue","disabled","title","authors","Component","Search","state","searchedBooks","prevSearch","userSearch","updateSearch","setState","componentDidUpdate","undefined","length","map","sBook","filter","to","type","placeholder","key","Shelf","List","BooksApp","getBooks","exact","path","render","history","push","React","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.6d224892.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => res.json())\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React, {Component} from 'react'\nimport * as BooksAPI from '../BooksAPI'\n\n\nclass Book extends Component {\n\n    updateShelf(e, book) {\n        BooksAPI.update(book, e.target.value).then(() => {\n            if (this.props.onUpdate) this.props.onUpdate()\n        })\n    }\n\n    render() {\n\n        const { book } = this.props\n\n        return (\n            <div className='book'>\n                <div className='book-top'>\n                    <div className='book-cover' style={{ width: 128, height: 193, backgroundImage: `url(${book.imageLinks ? book.imageLinks.thumbnail : 'http://via.placeholder.com/128x193'})` }}></div>\n                    <div className='book-shelf-changer'>\n                        <select onChange={(e) => this.updateShelf(e, book)} defaultValue={typeof book.shelf === 'undefined' ? 'none' : book.shelf}>\n                            <option value='move' disabled>Move to...</option>\n                            <option value='currentlyReading'>Currently Reading</option>\n                            <option value='wantToRead'>Want to Read</option>\n                            <option value='read'>Read</option>\n                            <option value='none'>None</option>\n                        </select>\n                    </div>\n                </div>\n                <div className='book-title'>{book.title}</div>\n                <div className='book-authors'>{book.authors}</div>\n            </div>\n        )\n    }\n}\n\nexport default Book;","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport * as BooksAPI from '../BooksAPI'\nimport Book from './Book'\n\n\nclass Search extends Component {\n\n    state = {\n        searchedBooks: 0,\n        prevSearch: '',\n        userSearch: '',\n    };\n\n    updateSearch = query => {\n        this.setState(() => ({\n            userSearch: query,\n        }));\n    };\n\n    componentDidUpdate = () => {\n        const { userSearch, prevSearch } = this.state;\n\n        if (userSearch !== prevSearch) {\n            if (userSearch !== '') {\n                BooksAPI.search(userSearch)\n                    .then(books => {\n                        if (books !== undefined && books.length > 0) {\n                            const searchedBooks = books.map(book => {\n                                const sBook = this.props.books.filter(sBook => sBook.id === book.id);\n                                return sBook.length > 0 ? sBook[0] : book;\n                            });\n                            this.setState(() => ({\n                                prevSearch: userSearch,\n                                searchedBooks: searchedBooks,\n                            }));\n                        } else {\n                            this.setState(() => ({\n                                prevSearch: userSearch,\n                                searchedBooks: [],\n                            }));\n                        };\n                    });\n            } else {\n                this.setState(() => ({\n                    prevSearch: userSearch,\n                    searchedBooks: [],\n                }));\n            };\n        };\n    };\n\n    render() {\n        return (\n            <div className='search-books'>\n                <div className='search-books-bar'>\n                    <Link className='close-search' to='/' />\n                    <div className='search-books-input-wrapper'>\n                        <input type='text' placeholder='Search by title or author' value={this.state.userSearch} onChange={(e) => this.updateSearch(e.target.value)} />\n                    </div>\n                </div>\n                <div className='search-books-results'>\n                    {this.state.searchedBooks ? (\n                        this.state.searchedBooks.length > 0 ? (\n                            <ol className='books-grid'>\n                                {this.state.searchedBooks.map((book) => (\n                                    <li key={book.id}>\n                                        <Book book={book} onUpdate={this.props.onUpdate} />\n                                    </li>\n                                ))}\n                            </ol>\n                        ) : (\n                                <div className='books-grid'>\n                                    <p>Sorry, but nothing matched your search terms</p>\n                                </div>\n                            )\n                    ) : ''}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Search;","import React from 'react'\nimport Book from './Book'\n\n\nfunction Shelf(props) {\n    \n    return (\n        <div className='bookshelf'>\n            <h2 className='bookshelf-title'>{props.title}</h2>\n            <div className='bookshelf-books'>\n                <ol className='books-grid'>\n                    {props.books.map(book => (\n                        <li key={book.id}>\n                            <Book book={book} onUpdate={props.onUpdate} />\n                        </li>\n                    ))}\n                </ol>\n            </div>\n        </div>\n    )\n}\n\nexport default Shelf;","import React, {Component} from 'react'\nimport { Link } from 'react-router-dom'\nimport Shelf from './Shelf'\n\n\nclass List extends Component {\n    \n    render() {\n\n        const { books, onUpdate } = this.props\n\n        return (\n            <div className='list-books'>\n                <div className='list-books-title'>\n                    <h1>MyReads</h1>\n                </div>\n                <div className='list-books-content'>\n                    <div>\n                        <Shelf title='Currently Reading' books={books.filter(book => book.shelf === 'currentlyReading')} onUpdate={onUpdate} />\n                        <Shelf title='Want to Read' books={books.filter(book => book.shelf === 'wantToRead')} onUpdate={onUpdate} />\n                        <Shelf title='Read' books={books.filter(book => book.shelf === 'read')} onUpdate={onUpdate} />\n                    </div>\n                </div>\n                <div className='open-search'>\n                    <Link to='/search' title='Add a book'><button>Add a book</button></Link>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default List;","import React from 'react'\nimport {Switch, Route} from 'react-router-dom'\nimport * as BooksAPI from './BooksAPI'\nimport Search from './components/Search'\nimport List from './components/List'\nimport './App.css'\n\nclass BooksApp extends React.Component {\n\n  state = {\n    books: [],\n  }\n\n  getBooks = () => {\n    BooksAPI.getAll().then((books) => {\n      this.setState({ books })\n    })\n  }\n\n  componentDidMount() {\n    this.getBooks()\n  }\n\n  render() {\n    return (\n      <div className='app'>\n        <Switch>\n          <Route exact path={'/'} render={() => (\n            <List books={this.state.books} onUpdate={this.getBooks} />\n          )} />\n          <Route exact path={'/search'} render={({ history }) => (\n            <Search\n              books={this.state.books}\n              onUpdate={() => {\n                this.getBooks()\n                history.push('/')\n              }}\n            />\n          )} />\n        </Switch>\n      </div>\n    )\n  }\n}\n\nexport default BooksApp","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport {HashRouter} from 'react-router-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<HashRouter><App /></HashRouter>, document.getElementById('root'))"],"sourceRoot":""}